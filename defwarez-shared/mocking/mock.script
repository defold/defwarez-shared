--[[
{
	owner = 1,
	scores = {
		1 = 0
	},
	max_score = 0,
	players = {
		1 = 1
	}
}
]]
local mock_state = {
	owner = 1,
	score = {0, 300},
	max_score = 0,
	players = { 1, 2 },
	udata = {}
}
local mock_player_id = 1

local state_timer_reset = 0.4

function init(self)
	msg.post("#mock_gui", "disable")
	self.state_timer = state_timer_reset
	local is_live = sys.get_config("defwarez.live", "0") == "1"
	if not is_live then
		msg.post("game:/main", "player_id", {id = mock_player_id})
	end
end

function update(self, dt)
	self.state_timer = self.state_timer - dt
	if self.state_timer <= 0 then
		self.state_timer = state_timer_reset

		msg.post("game:/main", "game_state", mock_state)
	end
end

local function start_game(self)
	msg.post(self.sender, "defwarez_game_start")
	msg.post("#mock_gui", "disable")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("mock_settings") then
		self.sender = sender
		if not message.autorun then
			msg.post("#mock_gui", "enable")
		else
			start_game(self)
		end
	elseif message_id == hash("mock_start_game") then
		start_game(self)
	elseif message_id == hash("add_score") then
		mock_state.score[1] = mock_state.score[1] + message.score
	elseif message_id == hash("set_score") then
		mock_state.score[1] = message.score
	elseif message_id == hash("set_userdata") then
		mock_state.udata[1] = message
	end
end
